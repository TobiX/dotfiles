# tobias1 prompt theme
# by Tobias Gruetzmacher <tobias-zsh@23.gs>
# do whatever you like with this script

prompt_tobias1_help () {
  cat <<'EOF'
This prompt is color-scheme-able.  You can invoke it thus:

  prompt tobias1 [colors]

Since there are many colors in this promt, you can change them individually to
your taste. Just call the prompt with "<name> <color>" pairs, like:

  prompt tobias1 user blue rootchar cyan

You can use the following names:

  user     - user@host part of the prompt
  time     - clock in the prompt
  rootchar - prompt character when root
  userchar - prompt character when normal user
  path     - directory in right prompt
  cont     - secondary prompt
  contchar - secondary promt character
  error    - spelling correction prompt
EOF
}

prompt_tobias1_setup () {
	local -A pc
	local titlebar='%(!.[ROOT] | .)%n@%m:%~'
	local elm

	pc=(
		user green
		time blue
		rootchar red
		userchar cyan
		path red
		cont green
		contchar cyan
		error red
		vcs white
		"$@")

	PS1=''
	case "$TERM" in
		xterm*|rxvt*)
			PS1+=$'%{\e]0;'$titlebar$'\a%}'
		;;
		screen*)
			PS1+=$'%{\e_'$titlebar$'\e\\\ekzsh\e\\%}'
		;;
	esac

	if [[ -n $SCHROOT_CHROOT_NAME ]]
	then
		PS1+="($SCHROOT_CHROOT_NAME) "
	fi

	# Finally, the prompt.
	PS1+="%B%F{$pc[user]}%n@%m "
	PS1+="%F{$pc[time]}%T "
	PS1+="%(!.%F{$pc[rootchar]}.%F{$pc[userchar]})$ %f%b"

	RPS1=" %B%F{$pc[path]}%~"
	[[ -o prompt_subst ]] && RPS1+='${vcs_info_msg_0_}'
	RPS1+="%f%(?.. [%?])%b"

	PS2="%F{$pc[cont]}%_%F{$pc[contchar]}>%f "

	SPROMPT="zsh:%B%F{$pc[error]} "%R" -> "%r" [ynae]?%f%b "
}

prompt_tobias1_setup "$@"

# vim: set ts=4 sw=4 ft=zsh:
