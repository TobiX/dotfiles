# Some nice mounting stuff

[[ -x =pmount ]] && alias pmount="pmount -e"

mount_or_umount () {
	local mp="$1" m="$2" um="$3"
	if mount | grep -q " on $mp type "
	then
		${=um} && echo "$mp $bg_bold[red]umounted$reset_color"
	else
		${=m} && echo "$mp $bg_bold[green]mounted$reset_color"
	fi
}

# remount root as ro or rw (embedded)
[[ -x /sbin/init-ro ]] && root () {
	if mount | grep -q " on / type .*ro"
	then
		sudo mount -o remount,rw / && echo "root $bg_bold[red]read-write$reset_color"
	else
		sudo mount -o remount,ro / && echo "root $bg_bold[green]read-only$reset_color"
	fi
}

mount_or_umount_fstab () {
	local mp="$1"
	mount_or_umount "$mp" "mount $mp" "umount $mp"
}

mount_or_umount_sshfs () {
	local server="$1" mp="$2"
	mount_or_umount "$mp" "sshfs -o reconnect $server $mp" "fusermount -u $mp"
}

mount_or_umount_pmount () {
	local dev="$1" label="$2"
	mount_or_umount "/media/$label" "pmount $dev $label" "pumount $label"
}

# mount encfs .<param> onto <param>
[[ -x =encfs ]] && enc () {
	local mp="$1" dir="$1:h/.$1:t"

	if [[ ! -d $dir ]]; then
		echo "Error: directory '$dir' does not exist!"
		return 1
	fi
	dir=`cd $dir; pwd`

	if [[ ! -d $mp ]]; then
		mkdir -p $mp
	fi
	mp=`cd $mp; pwd`

	mount_or_umount "$mp" "encfs $dir $mp" "fusermount -u $mp"
}

[[ -d /media/lg ]] && alias lg="mount_or_umount_fstab /media/lg"
[[ -d /media/nec ]] && alias nec="mount_or_umount_fstab /media/nec"
[[ -d /media/tosh ]] && alias tosh="mount_or_umount_fstab /media/tosh"
[[ -d /media/cdrom0 ]] && alias cdrom="mount_or_umount_fstab /media/cdrom0"
grep -q '^.\?nibbler' ~/.ssh/known_hosts && {
	alias nib-home="mount_or_umount_sshfs nibbler:$HOME $HOME/mnt"
	alias nib-media="mount_or_umount_sshfs nibbler:/srv/media $HOME/mnt"
}
grep -q '^.\?kos-mos' ~/.ssh/known_hosts && {
	alias kos-home="mount_or_umount_sshfs kos-mos:$HOME $HOME/mnt"
	alias kos-media="mount_or_umount_sshfs kos-mos:/media $HOME/mnt"
}

true
# vim: set ts=4 sw=4 ft=zsh:
